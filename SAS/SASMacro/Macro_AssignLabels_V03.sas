/*
**************************************************************************************************
Program Name:    Macro_AssignLabels_V02.sas
Initial Date:    21-Apr-2015
Author:          Dennis Neuschwander
Shorthand Symbol:DN
Sponsor/ Study:  -
SAS-Version:     9.4
**************************************************************************************************
Short Description: Uses the output dataset of the sas programmes generated by the 
				   macro %CreateLabelProg in order to assign labels to each variable in all 
				   datasets containing crf-data of a study. The datasets have to be within 
				   the work-library or the same folder.
Risk Assessment:   High
**************************************************************************************************
Source of data:    Itemlist 
Input datasets:	   All SAS datasets with crf-data of the study (should be in the
				   m_dataset_list (automatically generated by macro %Import or %AssignFormats)
				   There are two different modes available for the label assignment (see 
				   variable description below).
Output format:     .sas7bdat,
Output type:       SAS dataset containing the labels of all datasets with crf-data
Templates /macros: 
Required programs: 1. m_new_labels_all.sas (always!), 2. m_new_labels_duplicates (only if mode=2);
				   the programmes can be created by the macro "CreateLabelProg";
**************************************************************************************************
Document History :
Version 	Date 	    	Author	 Purpose
01			21-Apr-2015 	DN		 First initiation
02			30-Apr-2015		DN		 Macro can be executed in two modes (see description of macro 
									 variable "mode".
03			25-Jun-2015		DN		 The previous macro parameter "mode" is now determined by macro
*/



*****************************************************************; 
***						Macro start;
*****************************************************************;

*** New macro parameter "lab_path". File path of the SAS-programme that creates the dataset with the labels;
*** New macro parameter "label_prog". Name of the SAS-programme that creates the dataset with the labels;
*** New macro parameter "label_dat". Dataset with the labels;
*** New macro parameter "folder_path". File path with the unformatted raw data (if folder_path is not specified, the work-library is used);
*** New macro parameter "out_path". File path for the labelled datasets (if out_path is not specified, the work-library is used);

*** New variable "order". Necessary to keep the order of the variables as in the itemlist
*** All other variables are variables of the itemlist;

%macro AssignLabels (lab_path, label_prog, label_dat, folder_path, out_path);
	
	%include "&lab_path.&label_prog";

	data _null_;
		if find(upcase("&label_prog"),"ALL", 1) gt 0 then mode=1;
		else if find(upcase("&label_prog"),"DUPLICATES", 1) gt 0 then mode=2;
		call symput("mode",compress(put(mode,2.)));
	run;
		
	%put &mode;
	%if &folder_path ne %then %do;
		filename entry2 pipe "dir &folder_path /b";
		data m_dataset_list;
			infile entry2 truncover end=last;
			length fname $40.;
			retain i 0;
			input fname;
			i=i+1;
			if substr(fname, 1, 2) eq "m_" then check_m_ = "1";
			else if substr(fname, 1, 2) ne "m_" then check_m_ = "0";
			call symput('fname'||trim(left(put(i,8.))),scan(trim(fname),1,'.'));
			call symput('check_m_'||trim(left(put(i,8.))), trim(check_m_));
			if last then call symput('total',trim(left(put(i,8.))));
		run;
	%end;
	%else %if &folder_path eq %then %do;
		data m_dataset_list;
			set m_dataset_list end=last;
			if compress(check_m_) eq "0" then do;
				fname 	 = "m_" || strip(fname);
				check_m_ = "1";
			end;
			call symput('fname'||trim(left(put(i,8.))),scan(trim(fname),1,'.'));
			call symput('check_m_'||trim(left(put(i,8.))), trim(check_m_));
			if last then call symput('total',trim(left(put(i,8.))));
		run;
	%end;

*	libname libdata "&folder_path";
	libname library (libdata); 
	libname out_path "&out_path";

	%do i=1 %to &total;

		%if &mode eq 1 %then %do;
			data _null_;
				%if &folder_path eq %then set work.&&fname&i end=eof;
					%else %if &folder_path ne %then set libdata.&&fname&i end=eof;; 
				if eof then call symput("eventoid", compress(upcase(__STUDYEVENTOID)));
			run;
			%put &eventoid;
			data label_mode;
				set &label_dat;
				if "&eventoid" eq compress(upcase(__STUDYEVENTOID));
			run;
		%end;
		%else %if &mode eq 2 %then %do;
			data label_mode;
				set &label_dat;
			run;
		%end;
		
		proc contents data=%if &folder_path ne %then libdata.&&fname&i; %else %if &folder_path eq %then &&fname&i; out=contents_&i (rename=(name=item_name)) noprint;
		run;

		proc sort data=contents_&i;
			by item_name;
		run;

		*** the dataset "&label_dat" comprises the &label_dat for each variable of all datasets with crf-data;
		proc sort data=label_mode;
			by item_name;
		run;

		*** because of the merge-step with the dataset "contents_&i", the dataset "label_list_&i" comprises the labels for each variable in the currently processed dataset;
		data label_list_&i;
			merge contents_&i (in=a drop=label) label_mode (in=b);
			by item_name;
			if a and b;
		run;

		%let label_assignment=;

		*** declare a macro variable with all label assignment steps for the currently processed dataset;
		data _null_;
			length label_assignment $32767.;
			set label_list_&i end=eof;
			by item_name;
			retain label_assignment;
			label_assignment = strip(label_assignment) || " label "||  strip(item_name) || '="' || strip(label) || '";';
			if eof then call symput("label_assignment", label_assignment);
		run;
 		%put &label_assignment;
		*** assign labels;
		%if &&check_m_&i eq 1 and &out_path eq %then data work.&&fname&i;
			%else %if &&check_m_&i eq 0 and &out_path eq %then data work.m_&&fname&i;
			%else %if &&check_m_&i eq 1 and &out_path ne %then data out_path.&&fname&i;
			%else %if &&check_m_&i eq 0 and &out_path ne %then data out_path.m_&&fname&i;;
		%if &folder_path eq %then set work.&&fname&i;
			%else %if &folder_path ne %then set libdata.&&fname&i;;
				&label_assignment;
			run;
	%end;

	*** delete all datasets that are not needed anymore;
	proc datasets library=work nolist;
	 	delete  contents_1 - contents_&total
				label_list_1 - label_list_&total;
	run;	
	quit;	
%mend AssignLabels;

*****************************************************************; 
***				Example of use 1 (unified variable names);
*****************************************************************;
*data m_dataset_list;
*	set "Z:\STATISTICS\07_Templates\01_Analysis\07_Example_of_Use\Macros\00_Single_Datasets\m_dataset_list";
*run;
*%AssignLabels  (lab_path=Z:\STATISTICS\07_Templates\01_Analysis\07_Example_of_Use\Macros\02_Programmes\,
				label_prog=m_new_labels_duplicates_v01.sas,
				label_dat=labels_unified_var_names,   
				folder_path=Z:\STATISTICS\07_Templates\01_Analysis\07_Example_of_Use\Macros\01_Data\,
			   	out_path=);

*****************************************************************; 
***				Example of use 2 (visit specific variable names);
*****************************************************************;
/*
data m_dataset_list;
	set "Z:\STATISTICS\07_Templates\01_Analysis\07_Example_of_Use\Macros\00_Single_Datasets\m_dataset_list";
run;

%AssignLabels  (lab_path=Z:\STATISTICS\07_Templates\01_Analysis\07_Example_of_Use\Macros\02_Programmes\,
 				label_prog=m_new_labels_all_v01.sas, 
				label_dat=labels_all,   
				folder_path=Z:\STATISTICS\07_Templates\01_Analysis\07_Example_of_Use\Macros\01_Data\,
			   	out_path=);
*/
